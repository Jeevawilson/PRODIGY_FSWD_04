{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JEEVA\\\\Downloads\\\\realtime-chat-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io.connect(\"http://localhost:5000\");\nfunction App() {\n  _s();\n  const [message, setMessage] = useState(\"\");\n  const [chat, setChat] = useState([]);\n  const sendMessage = () => {\n    socket.emit(\"send_message\", {\n      message\n    });\n    setChat([...chat, {\n      message,\n      from: \"You\"\n    }]);\n    setMessage(\"\");\n  };\n  useEffect(() => {\n    socket.on(\"receive_message\", data => {\n      setChat(prevChat => [...prevChat, {\n        message: data.message,\n        from: \"Other\"\n      }]);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83D\\uDCAC Real-Time Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: chat.map((msg, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.from, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 26\n        }, this), \" \", msg.message]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter message...\",\n      value: message,\n      onChange: e => setMessage(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"wtsVqqyDD4r5L0iimIoIo+44xEY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","io","jsxDEV","_jsxDEV","socket","connect","App","_s","message","setMessage","chat","setChat","sendMessage","emit","from","on","data","prevChat","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/JEEVA/Downloads/realtime-chat-app/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport io from 'socket.io-client';\n\nconst socket = io.connect(\"http://localhost:5000\");\n\nfunction App() {\n  const [message, setMessage] = useState(\"\");\n  const [chat, setChat] = useState([]);\n\n  const sendMessage = () => {\n    socket.emit(\"send_message\", { message });\n    setChat([...chat, { message, from: \"You\" }]);\n    setMessage(\"\");\n  };\n\n  useEffect(() => {\n    socket.on(\"receive_message\", (data) => {\n      setChat((prevChat) => [...prevChat, { message: data.message, from: \"Other\" }]);\n    });\n  }, []);\n\n  return (\n    <div style={{ padding: 20 }}>\n      <h2>ðŸ’¬ Real-Time Chat</h2>\n      <div>\n        {chat.map((msg, index) => (\n          <p key={index}><strong>{msg.from}:</strong> {msg.message}</p>\n        ))}\n      </div>\n      <input\n        type=\"text\"\n        placeholder=\"Enter message...\"\n        value={message}\n        onChange={(e) => setMessage(e.target.value)}\n      />\n      <button onClick={sendMessage}>Send</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,EAAE,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,MAAM,GAAGH,EAAE,CAACI,OAAO,CAAC,uBAAuB,CAAC;AAElD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMY,WAAW,GAAGA,CAAA,KAAM;IACxBR,MAAM,CAACS,IAAI,CAAC,cAAc,EAAE;MAAEL;IAAQ,CAAC,CAAC;IACxCG,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAE;MAAEF,OAAO;MAAEM,IAAI,EAAE;IAAM,CAAC,CAAC,CAAC;IAC5CL,UAAU,CAAC,EAAE,CAAC;EAChB,CAAC;EAEDV,SAAS,CAAC,MAAM;IACdK,MAAM,CAACW,EAAE,CAAC,iBAAiB,EAAGC,IAAI,IAAK;MACrCL,OAAO,CAAEM,QAAQ,IAAK,CAAC,GAAGA,QAAQ,EAAE;QAAET,OAAO,EAAEQ,IAAI,CAACR,OAAO;QAAEM,IAAI,EAAE;MAAQ,CAAC,CAAC,CAAC;IAChF,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA;IAAKe,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAG,CAAE;IAAAC,QAAA,gBAC1BjB,OAAA;MAAAiB,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BrB,OAAA;MAAAiB,QAAA,EACGV,IAAI,CAACe,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACnBxB,OAAA;QAAAiB,QAAA,gBAAejB,OAAA;UAAAiB,QAAA,GAASM,GAAG,CAACZ,IAAI,EAAC,GAAC;QAAA;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACE,GAAG,CAAClB,OAAO;MAAA,GAAhDmB,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA+C,CAC7D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNrB,OAAA;MACEyB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,kBAAkB;MAC9BC,KAAK,EAAEtB,OAAQ;MACfuB,QAAQ,EAAGC,CAAC,IAAKvB,UAAU,CAACuB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eACFrB,OAAA;MAAQ+B,OAAO,EAAEtB,WAAY;MAAAQ,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEV;AAACjB,EAAA,CAjCQD,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AAmCZ,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}